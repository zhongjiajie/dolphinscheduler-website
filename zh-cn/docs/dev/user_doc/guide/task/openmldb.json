{
  "filename": "openmldb.md",
  "__html": "<h1>OpenMLDB 节点</h1>\n<h2>综述</h2>\n<p><a href=\"https://openmldb.ai/\">OpenMLDB</a> 是一个优秀的开源机器学习数据库，提供生产级数据及特征开发全栈解决方案。</p>\n<p>OpenMLDB任务组件可以连接OpenMLDB集群执行任务。</p>\n<h2>创建任务</h2>\n<ul>\n<li>点击项目管理-项目名称-工作流定义，点击“创建工作流”按钮，进入 DAG 编辑页面；</li>\n<li>拖动工具栏的 <img src=\"/img/tasks/icons/openmldb.png\" width=\"15\"/> 任务节点到画板中。</li>\n</ul>\n<h2>任务样例</h2>\n<p>首先介绍一些DS通用参数：</p>\n<ul>\n<li><strong>节点名称</strong> ：设置任务的名称。一个工作流定义中的节点名称是唯一的。</li>\n<li><strong>运行标志</strong> ：标识这个节点是否能正常调度,如果不需要执行，可以打开禁止执行开关。</li>\n<li><strong>描述</strong> ：描述该节点的功能。</li>\n<li><strong>任务优先级</strong> ：worker 线程数不足时，根据优先级从高到低依次执行，优先级一样时根据先进先出原则执行。</li>\n<li><strong>Worker 分组</strong> ：任务分配给 worker 组的机器执行，选择 Default，会随机选择一台 worker 机执行。</li>\n<li><strong>环境名称</strong> ：配置运行脚本的环境。</li>\n<li><strong>失败重试次数</strong> ：任务失败重新提交的次数。</li>\n<li><strong>失败重试间隔</strong> ：任务失败重新提交任务的时间间隔，以分钟为单位。</li>\n<li><strong>延迟执行时间</strong> ：任务延迟执行的时间，以分钟为单位。</li>\n<li><strong>超时告警</strong> ：勾选超时告警、超时失败，当任务超过&quot;超时时长&quot;后，会发送告警邮件并且任务执行失败。</li>\n<li><strong>前置任务</strong> ：选择当前任务的前置任务，会将被选择的前置任务设置为当前任务的上游。</li>\n</ul>\n<h3>OpenMLDB 参数</h3>\n<p><strong>任务参数</strong></p>\n<ul>\n<li><strong>zookeeper地址</strong> ：OpenMLDB集群连接地址中的zookeeper地址, e.g. 127.0.0.1:2181。</li>\n<li><strong>zookeeper路径</strong> : OpenMLDB集群连接地址中的zookeeper路径, e.g. /openmldb。</li>\n<li><strong>执行模式</strong> ：初始执行模式（离线/在线），你可以在sql语句中随时切换。</li>\n<li><strong>SQL语句</strong> ：SQL语句。</li>\n<li>自定义参数：是PYTHON局部的用户自定义参数，会替换脚本中以${变量}的内容。</li>\n</ul>\n<p>下面有几个例子：</p>\n<h4>导入数据</h4>\n<p><img src=\"/img/tasks/demo/openmldb-load-data.png\" alt=\"load data\"></p>\n<p>我们使用<code>LOAD DATA</code>语句导入数据到OpenMLDB集群。因为选择的是离线执行模式，所以将会导入数据到离线存储中。</p>\n<h4>特征抽取</h4>\n<p><img src=\"/img/tasks/demo/openmldb-feature-extraction.png\" alt=\"fe\"></p>\n<p>我们使用<code>SELECT INTO</code>进行特征抽取。因为选择的是离线执行模式，所以会使用离线引擎做特征计算。</p>\n<h2>环境准备</h2>\n<h3>OpenMLDB 启动</h3>\n<p>执行任务之前，你需要启动OpenMLDB集群。如果是在生产环境，请参考<a href=\"https://openmldb.ai/docs/zh/v0.5/deploy/install_deploy.html\">deploy OpenMLDB</a>.</p>\n<p>你可以参考<a href=\"https://openmldb.ai/docs/zh/v0.5/quickstart/openmldb_quickstart.html#id11\">在docker中运行OpenMLDB集群</a> 快速启动。</p>\n<h3>Python 环境</h3>\n<p>OpenMLDB任务组件将使用OpenMLDB Python SDK来连接OpenMLDB。所以你需要Python环境。</p>\n<p>我们默认使用<code>python3</code>，你可以通过配置<code>PYTHON_HOME</code>来设置自己的Python环境。</p>\n<p>请确保已通过<code>pip install openmldb</code>，在worker server的主机中安装了OpenMLDB Python SDK。</p>\n",
  "link": "/dist/zh-cn/docs/dev/user_doc/guide/task/openmldb.html",
  "meta": {}
}