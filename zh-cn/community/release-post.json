{
  "filename": "release-post.md",
  "__html": "<h1>发版后续</h1>\n<h2>更新官网</h2>\n<p>例如已发版 <code>x.y.z</code>，需要进行以下更新:</p>\n<ul>\n<li><code>docs/en-us/x.y.z</code> 和 <code>docs/zh-cn/x.y.z</code>: 复制老版本目录改为新版本 x.y.z\n<ul>\n<li>所包含文档的引用链接保持和 x.y.z 一致，尤其注意以下文件更新:\n<ul>\n<li><code>architecture-design.md</code></li>\n<li><code>cluster-deployment.md</code></li>\n<li><code>docker-deployment.md</code></li>\n<li><code>expansion-reduction.md</code></li>\n<li><code>kubernetes-deployment.md</code></li>\n<li><code>standalone-deployment.md</code></li>\n<li><code>upgrade.md</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>docs/en-us/release/history-versions.md</code> 和 <code>docs/zh-cn/release/history-versions.md</code>: 增加 x.y.z 的新 version 和 link</li>\n<li><code>download/en-us/download.md</code> 和 <code>download/zh-cn/download.md</code>: 增加 x.y.z 版本发布包的下载</li>\n<li><code>site_config/docsx-y-z.js</code>: 复制老配置文件改为新版本，内容链接保持和 x.y.z 一致</li>\n<li><code>site_config/site.js</code>:\n<ul>\n<li><code>docsLatest</code>: 更新为 x.y.z</li>\n<li><code>docs0</code>: 两处 <code>en-us/zh-cn</code> 的 <code>text</code> 更新为 <code>latest(x.y.z)</code></li>\n<li><code>docsxyz</code>: 两处 <code>en-us/zh-cn</code> 的 <code>children</code> 增加 <code>key</code> 为 <code>docsxyz</code>, <code>text</code> 为 <code>x.y.z</code> 的下拉菜单</li>\n</ul>\n</li>\n<li><code>src/pages/docs/index.md.jsx</code>: 增加 <code>'x.y.z': docsxyzConfig,</code></li>\n</ul>\n<h2>更新 GitHub issue 模板</h2>\n<p>DolphinScheduler 在 GitHub issue 中有版本选择的部分，当有新版本发版后，需要更新这部分的内容。目前与版本关联的是\n<a href=\"https://github.com/apache/dolphinscheduler/blob/dev/.github/ISSUE_TEMPLATE/bug-report.yml\">bug-report</a>，发版的时候需要\n向其中的 <strong>Version</strong> 部分增加内容。</p>\n<h2>发布镜像</h2>\n<p>构建 Docker 镜像，请参考 <a href=\"https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/installation/docker.html\">如何构建一个 Docker 镜像？</a></p>\n<p>然后推送镜像</p>\n<pre><code class=\"language-bash\">docker tag apache/dolphinscheduler:x.y.z apache/dolphinscheduler:latest\ndocker login <span class=\"hljs-comment\"># 输入用户和密码</span>\ndocker push apache/dolphinscheduler:x.y.z\ndocker push apache/dolphinscheduler:latest\n</code></pre>\n<h2>发布到PyPI</h2>\n<p>需要将 Python API 发布到 PyPI，请参考 <a href=\"https://github.com/apache/dolphinscheduler/blob/dev/dolphinscheduler-python/pydolphinscheduler/RELEASE.md#to-pypi\">Python API release</a>\n完成 PyPI 的发版</p>\n",
  "link": "/dist/zh-cn/community/release-post.html",
  "meta": {}
}