{
  "filename": "switch.md",
  "__html": "<h1>Switch</h1>\n<p>The switch is a conditional judgment node, decide the branch executes according to the value of <a href=\"../parameter/global.md\">global variable</a> and the expression result written by the user.</p>\n<h2>Create</h2>\n<p>Drag from the toolbar <img src=\"/img/switch.png\" width=\"20\"/>  task node to canvas to create a task.\n<strong>Note</strong> After created a switch task, you must first configure the upstream and downstream, then configure the parameter of task branches.</p>\n<h2>Parameter</h2>\n<ul>\n<li>Node name: The node name in a workflow definition is unique.</li>\n<li>Run flag: Identifies whether this node schedules normally, if it does not need to execute, select the <code>prohibition execution</code>.</li>\n<li>Descriptive information: Describe the function of the node.</li>\n<li>Task priority: When the number of worker threads is insufficient, execute in the order of priority from high to low, and tasks with the same priority will execute in a first-in first-out order.</li>\n<li>Worker grouping: Assign tasks to the machines of the worker group to execute. If <code>Default</code> is selected, randomly select a worker machine for execution.</li>\n<li>Times of failed retry attempts: The number of times the task failed to resubmit. You can select from drop-down or fill-in a number.</li>\n<li>Failed retry interval: The time interval for resubmitting the task after a failed task. You can select from drop-down or fill-in a number.</li>\n<li>Timeout alarm: Check the timeout alarm and timeout failure. When the task runs exceed the &quot;timeout&quot;, an alarm email will send and the task execution will fail.</li>\n<li>Condition: You can configure multiple conditions for the switch task. When the conditions are satisfied, execute the configured branch. You can configure multiple different conditions to satisfy different businesses.</li>\n<li>Branch flow: The default branch flow, when all the conditions are not satisfied, execute this branch flow.</li>\n</ul>\n<h2>Detail</h2>\n<p>Here we have three tasks, the dependencies are <code>A -&gt; B -&gt; [C, D]</code>, and <code>task_a</code> is a shell task and <code>task_b</code> is a switch task</p>\n<ul>\n<li>In task A, a global variable named <code>id</code> is defined through <a href=\"../parameter/global.md\">global variable</a>, and the declaration method is <code>${setValue(id=1)}</code></li>\n<li>Task B adds conditions and uses global variables declared upstream to achieve conditional judgment (Note: switch can get the global variables value, as long as its direct or indirect upstream have already assigned the global variables before switch acquires). We want to execute task C when <code>id = 1</code>, otherwise run task D\n<ul>\n<li>Configure task C to run when the global variable <code>id=1</code>. Then edit <code>${id} == 1</code> in the condition of task B, and select <code>C</code> as branch flow</li>\n<li>For other tasks, select <code>D</code> as branch flow</li>\n</ul>\n</li>\n</ul>\n<p>The following shows the switch task configuration:</p>\n<p><img src=\"/img/switch_configure.jpg\" alt=\"task-switch-configure\"></p>\n<h2>Related Task</h2>\n<p><a href=\"conditions.md\">condition</a>ï¼š<a href=\"conditions.md\">Condition</a>task mainly executes the corresponding branch based on the execution result status (success, failure) of the upstream node.\nThe <a href=\"switch.md\">Switch</a> task mainly executes the corresponding branch based on the value of the <a href=\"../parameter/global.md\">global parameter</a> and the judgment expression result written by the user.</p>\n",
  "link": "/dist/en-us/docs/3.0.0/user_doc/guide/task/switch.html",
  "meta": {}
}