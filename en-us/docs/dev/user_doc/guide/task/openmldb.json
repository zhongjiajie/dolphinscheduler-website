{
  "filename": "openmldb.md",
  "__html": "<h1>OpenMLDB Node</h1>\n<h2>Overview</h2>\n<p><a href=\"https://openmldb.ai/\">OpenMLDB</a> is an excellent open source machine learning database, providing a full-stack\nFeatureOps solution for production.</p>\n<p>OpenMLDB task plugin used to execute tasks on OpenMLDB cluster.</p>\n<h2>Create Task</h2>\n<ul>\n<li>Click <code>Project -&gt; Management-Project -&gt; Name-Workflow Definition</code>, and click the &quot;Create Workflow&quot; button to enter the\nDAG editing page.</li>\n<li>Drag from the toolbar <img src=\"/img/tasks/icons/openmldb.png\" width=\"15\"/> task node to canvas.</li>\n</ul>\n<h2>Task Example</h2>\n<p>First, introduce some general parameters of DolphinScheduler</p>\n<ul>\n<li><strong>Node name</strong>: The node name in a workflow definition is unique.</li>\n<li><strong>Run flag</strong>: Identifies whether this node schedules normally, if it does not need to execute, select\nthe <code>prohibition execution</code>.</li>\n<li><strong>Descriptive information</strong>: Describe the function of the node.</li>\n<li><strong>Task priority</strong>: When the number of worker threads is insufficient, execute in the order of priority from high\nto low, and tasks with the same priority will execute in a first-in first-out order.</li>\n<li><strong>Worker grouping</strong>: Assign tasks to the machines of the worker group to execute. If <code>Default</code> is selected,\nrandomly select a worker machine for execution.</li>\n<li><strong>Environment Name</strong>: Configure the environment name in which run the script.</li>\n<li><strong>Times of failed retry attempts</strong>: The number of times the task failed to resubmit.</li>\n<li><strong>Failed retry interval</strong>: The time interval (unit minute) for resubmitting the task after a failed task.</li>\n<li><strong>Delayed execution time</strong>: The time (unit minute) that a task delays in execution.</li>\n<li><strong>Timeout alarm</strong>: Check the timeout alarm and timeout failure. When the task runs exceed the &quot;timeout&quot;, an alarm\nemail will send and the task execution will fail.</li>\n<li><strong>Predecessor task</strong>: Selecting a predecessor task for the current task, will set the selected predecessor task as\nupstream of the current task.</li>\n</ul>\n<h3>OpenMLDB Parameters</h3>\n<p><strong>Task Parameter</strong></p>\n<ul>\n<li><strong>zookeeper</strong> ：OpenMLDB cluster zookeeper address, e.g. 127.0.0.1:2181.</li>\n<li><strong>zookeeper path</strong> : OpenMLDB cluster zookeeper path, e.g. /openmldb.</li>\n<li><strong>Execute Mode</strong> ：determine the init mode, offline or online. You can switch it in sql statement.</li>\n<li><strong>SQL statement</strong> ：SQL statement.</li>\n<li>Custom parameters: It is the user-defined parameters of Python, which will replace the content with ${variable} in the script.</li>\n</ul>\n<p>Here are some examples:</p>\n<h4>Load data</h4>\n<p><img src=\"/img/tasks/demo/openmldb-load-data.png\" alt=\"load data\"></p>\n<p>We use <code>LOAD DATA</code> to load data into OpenMLDB cluster. We select <code>offline</code> here, so it will load to offline storage.</p>\n<h4>Feature extraction</h4>\n<p><img src=\"/img/tasks/demo/openmldb-feature-extraction.png\" alt=\"fe\"></p>\n<p>We use <code>SELECT INTO</code> to do feature extraction. We select <code>offline</code> here, so it will run sql on offline engine.</p>\n<h2>Environment to prepare</h2>\n<h3>Start the OpenMLDB cluster</h3>\n<p>You should create an OpenMLDB cluster first. If in production env, please check <a href=\"https://openmldb.ai/docs/en/v0.5/deploy/install_deploy.html\">deploy OpenMLDB</a>.</p>\n<p>You can follow <a href=\"https://openmldb.ai/docs/zh/v0.5/quickstart/openmldb_quickstart.html#id11\">run OpenMLDB in docker</a>\nto a quick start.</p>\n<h3>Python env</h3>\n<p>The OpenMLDB task will use OpenMLDB Python SDK to connect OpenMLDB cluster. So you should have the Python env.</p>\n<p>We will use <code>python3</code> by default. You can set <code>PYTHON_HOME</code> to use your custom python env.</p>\n<p>Make sure you have installed OpenMLDB Python SDK in the host where the worker server running, using <code>pip install openmldb</code>.</p>\n",
  "link": "/dist/en-us/docs/dev/user_doc/guide/task/openmldb.html",
  "meta": {}
}