{
  "filename": "jupyter.md",
  "__html": "<h1>Jupyter</h1>\n<h2>Overview</h2>\n<p>Use <code>Jupyter Task</code> to create a jupyter-type task and execute jupyter notes. When the worker executes <code>Jupyter Task</code>,\nit will use <code>papermill</code> to evaluate jupyter notes. Click <a href=\"https://papermill.readthedocs.io/en/latest/\">here</a> for details about <code>papermill</code>.</p>\n<h2>Conda Configuration</h2>\n<ul>\n<li>Config <code>conda.path</code> in <code>common.properties</code> to the path of your <code>conda.sh</code>, which should be the same <code>conda</code> you use to manage the python environment of your <code>papermill</code> and <code>jupyter</code>.\nClick <a href=\"https://docs.conda.io/en/latest/\">here</a> for more information about <code>conda</code>.</li>\n<li><code>conda.path</code> is set to <code>/opt/anaconda3/etc/profile.d/conda.sh</code> by default. If you have no idea where your <code>conda</code> is, simply run <code>conda info | grep -i 'base environment'</code>.</li>\n</ul>\n<h2>Create Task</h2>\n<ul>\n<li>Click Project Management-Project Name-Workflow Definition, and click the &quot;Create Workflow&quot; button to enter the DAG editing page.</li>\n<li>Drag <img src=\"/img/tasks/icons/jupyter.png\" width=\"15\"/> from the toolbar to the canvas.</li>\n</ul>\n<h2>Task Parameter</h2>\n<ul>\n<li>Node name: The node name in a workflow definition is unique.</li>\n<li>Run flag: Identifies whether this node can be scheduled normally, if it does not need to be executed, you can turn on the prohibition switch.</li>\n<li>Descriptive information: Describe the function of the node.</li>\n<li>Task priority: When the number of worker threads is insufficient, execute in the order of priority from high to low, and tasks with the same priority will execute in a first-in first-out order.</li>\n<li>Worker grouping: Assign tasks to the machines of the worker group to execute. If <code>Default</code> is selected, randomly select a worker machine for execution.</li>\n<li>Number of failed retry attempts: The failure task resubmitting times. It supports drop-down and hand-filling.</li>\n<li>Failed retry interval: The time interval for resubmitting the task after a failed task. It supports drop-down and hand-filling.</li>\n<li>Timeout alarm: Check the timeout alarm and timeout failure. When the task exceeds the &quot;timeout period&quot;, an alarm email will send and the task execution will fail.</li>\n<li>Conda Env Name: Name of conda environment.</li>\n<li>Input Note Path: Path of input jupyter note template.</li>\n<li>Out Note Path: Path of output note.</li>\n<li>Jupyter Parameters: Parameters in json format used for jupyter note parameterization.</li>\n<li>Kernel: Jupyter notebook kernel.</li>\n<li>Engine: Engine to evaluate jupyter notes.</li>\n<li>Jupyter Execution Timeout: Timeout set for each jupyter notebook cell.</li>\n<li>Jupyter Start Timeout: Timeout set for jupyter notebook kernel.</li>\n<li>Others: Other command options for papermill.</li>\n</ul>\n<h2>Task Example</h2>\n<h3>Jupyter Task Example</h3>\n<p>This example illustrates how to create a jupyter task node.</p>\n<p><img src=\"/img/tasks/demo/jupyter.png\" alt=\"demo-jupyter-simple\"></p>\n",
  "link": "/dist/en-us/docs/dev/user_doc/guide/task/jupyter.html",
  "meta": {}
}